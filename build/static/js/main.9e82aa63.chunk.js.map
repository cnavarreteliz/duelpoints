{"version":3,"sources":["components/Userbox.jsx","components/Playername.jsx","components/Coin.jsx","components/Dice.jsx","pages/duelpoints/Duelpoints.jsx","serviceWorker.js","index.js"],"names":["Userbox","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","player_name","playernameFromParent","player_lifepoints","lifepointsFromParent","points","_this2","react_default","a","createElement","className","src","concat","character","alt","value","max","onClick","updatePoints","pointsFromParent","React","Component","Playername","name","_handleKeyDown","bind","assertThisInitialized","evt","variable","key","console","log","sendPlayername","type","placeholder","onChange","event","setState","target","onKeyDown","Coin","generateNumber","min","Math","floor","random","getInputs","minTemp","maxTemp","number","flip","setTimeout","resetFlip","speed","Dice","reactDice","rollAll","num","react_dice_complete_default","numDice","rollDone","rollDoneCallback","outline","ref","dice","dotColor","faceColor","rollTime","Duelpoints","resetGame","player1_lifepoints","player2_lifepoints","reset","player1_name","player2_name","_this$state","href","src_components_Playername","src_components_Userbox","components_Dice","src_components_Coin","build","formatValue","onReset","_ref","Fragment","Minutes","Seconds","Boolean","window","location","hostname","match","ReactDOM","render","pages_duelpoints_Duelpoints","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9e82aa63.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Userbox.scss\";\n\nclass Userbox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      player_name: this.props.playernameFromParent,\n      player_lifepoints: this.props.lifepointsFromParent,\n      points: \"\"\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"userbox-wrapper\">\n        <div className=\"box user-box\">\n          <div className=\"profile\">\n            <img\n              src={`./${this.props.character}.jpg`}\n              alt=\"usr-img\"\n              className=\"user-img\"\n            />\n            <div className=\"profile-text\">\n              <h2 className=\"subtitle user-name\">{this.state.player_name}</h2>\n              <h1 className=\"subtitle user-lifepoints\">\n                LifePoints: {this.props.lifepointsFromParent}\n              </h1>\n            </div>\n          </div>\n\n          <div className=\"lifepoints\">\n            <progress\n              className={\n                this.props.lifepointsFromParent > 4000\n                  ? \"progress is-primary\"\n                  : this.props.lifepointsFromParent > 2000\n                  ? \"progress is-warning\"\n                  : this.props.lifepointsFromParent >= 0\n                  ? \"progress is-danger\"\n                  : \"progress\"\n              }\n              value={this.props.lifepointsFromParent}\n              max=\"8000\"\n            />\n          </div>\n\n          <div className=\"interaction\">\n            <button\n              className=\"button is-success operation\"\n              onClick={() => this.props.updatePoints(this.props.lifepointsFromParent +\n                this.props.pointsFromParent * 1)}\n            >\n              +\n            </button>\n            <button\n              className=\"button is-danger operation\"\n              onClick={() => this.props.updatePoints(this.props.lifepointsFromParent -\n                this.props.pointsFromParent * 1)}\n            >\n              -\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Userbox;\n","import React from \"react\";\n\nimport \"./Playername.scss\";\n\nclass Playername extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\"\n    };\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n  }\n\n  _handleKeyDown(evt, variable) {\n    if (evt.key === \"Enter\") {\n      console.log(\"Hola\");\n      this.props.sendPlayername(this.state.name);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"playername-wrapper\">\n        <div className=\"container\">\n          <div className=\"box user-box\">\n            <div className=\"user-title\">\n              <h1 className=\"player\">Insert Player's Name</h1>\n            </div>\n            <div className=\"user-insert\">\n              <input\n                className=\"input insert-input\"\n                type=\"text\"\n                placeholder=\"Name\"\n                onChange={event => this.setState({ name: event.target.value })}\n                onKeyDown={event => this._handleKeyDown(event, \"name\")}\n              />\n              <button\n                className=\"button is-small insert-button\"\n                onClick={() => this.props.sendPlayername(this.state.name)}\n              >\n                Insert\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Playername;\n","import React from \"react\";\n\nimport \"./Coin.scss\";\n\nclass Coin extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      min: 1,\n      max: 2,\n      number: 1,\n      speed: 3,\n      flip: false\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      number: this.generateNumber(this.state.min, this.state.max)\n    });\n  }\n\n  generateNumber = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  };\n\n  getInputs = () => {\n    if (this.state.min > this.state.max) {\n      const minTemp = this.state.min;\n      const maxTemp = this.state.max;\n      this.setState(\n        {\n          min: maxTemp,\n          max: minTemp\n        },\n        () =>\n          this.setState({\n            number: this.generateNumber(this.state.min, this.state.max)\n          })\n      );\n    } else {\n      this.setState({\n        number: this.generateNumber(this.state.min, this.state.max)\n      });\n    }\n    this.setState(\n      {\n        flip: true\n      });\n      setTimeout(() => {\n        this.setState({flip: false});\n      }, 1200)\n      \n    \n  };\n\n  resetFlip = () => {\n    this.setState({\n      flip: false\n    });\n  };\n\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"coin-wrapper\">\n        <div className=\"container\">\n          <div className=\"coin-generator\">\n            <img\n              src={\n                this.state.number === 1 ? \"./coin-front.png\" : \"./coin-back.png\"\n              }\n              alt=\"Coin\"\n              className={`coin-toss ${\n                this.state.flip ? \"flip-scale-up-hor\" : \"\"\n              }`}\n              onClick={this.getInputs}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Coin;\n","import React from \"react\";\nimport ReactDice from \"react-dice-complete\";\nimport \"../../node_modules/react-dice-complete/dist/react-dice-complete.css\";\n\nclass Dice extends React.Component {\n  rollAll() {\n    this.reactDice.rollAll();\n  }\n\n  rollDoneCallback(num) {\n    console.log(`You rolled a ${num}`);\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactDice\n          numDice={1}\n          rollDone={this.rollDoneCallback}\n          outline={true}\n          ref={dice => (this.reactDice = dice)}\n          dotColor={\"#000\"}\n          faceColor={\"#fff\"}\n          rollTime={0.5}\n        />\n      </div>\n    );\n  }\n}\nexport default Dice;\n","import React from \"react\";\nimport \"./Duelpoints.scss\";\nimport Timer from \"react-compound-timer\";\n\nimport Userbox from \"../../components/Userbox\";\nimport Playername from \"../../components/Playername\";\nimport Coin from \"../../components/Coin\";\nimport Dice from \"../../components/Dice\";\n\nclass Duelpoints extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      player1_name: \"\",\n      player1_lifepoints: 8000,\n      player2_name: \"\",\n      player2_lifepoints: 8000,\n      points: \"\",\n      reset: false\n    };\n\n    this.resetGame = this.resetGame.bind(this);\n  }\n\n  resetGame = () => {\n    this.setState({\n      points: \"\",\n      player1_lifepoints: 8000,\n      player2_lifepoints: 8000,\n      reset: true\n    });\n  };\n\n  render() {\n    const {\n      player1_name,\n      player1_lifepoints,\n      player2_name,\n      player2_lifepoints,\n      points\n    } = this.state;\n\n    return (\n      <div className=\"duelpoints-wrapper\">\n        <div className=\"webpage-header\">\n            <a href=\"/\" className=\"navbar-brand webpage-name\">DuelPoints.xyz</a>\n        </div>\n\n        <section className=\"userbox\">\n          <div className=\"container\">\n            <div className=\"columns\">\n              {player1_name === \"\" && (\n                <div className=\"column player1\">\n                  <Playername\n                    sendPlayername={name =>\n                      this.setState({ player1_name: name })\n                    }\n                  />\n                </div>\n              )}\n\n              {player1_name !== \"\" && (\n                <div className=\"column player-1\">\n                  <Userbox\n                    character={\"yugi\"}\n                    playernameFromParent={player1_name}\n                    lifepointsFromParent={player1_lifepoints}\n                    pointsFromParent={points}\n                    resetGame={this.resetGame}\n                    updatePoints={points =>\n                      this.setState({ player1_lifepoints: points, points: \"\" })\n                    }\n                  />\n                </div>\n              )}\n\n              {player2_name === \"\" && (\n                <div className=\"column player2\">\n                  <Playername\n                    sendPlayername={name =>\n                      this.setState({ player2_name: name })\n                    }\n                  />\n                </div>\n              )}\n\n              {player2_name !== \"\" && (\n                <div className=\"column player-2\">\n                  <Userbox\n                    character={\"kaiba\"}\n                    playernameFromParent={player2_name}\n                    lifepointsFromParent={player2_lifepoints}\n                    pointsFromParent={points}\n                    updatePoints={points =>\n                      this.setState({ player2_lifepoints: points, points: \"\" })\n                    }\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n        </section>\n\n        <section className=\"game\">\n          {player1_name !== \"\" && player2_name !== \"\" && (\n            <div className=\"container\">\n              <div className=\"box game-box\">\n                <div className=\"columns game-structure\">\n                  <div className=\"column game-points\">\n                    <h1 className=\"game-points-title\"> POINTS </h1>\n                    <input\n                      className=\"input game-points-input\"\n                      type=\"number\"\n                      value={points}\n                      onChange={event =>\n                        this.setState({ points: event.target.value })\n                      }\n                    />\n                  </div>\n                  <div className=\"column game-dice\">\n                    <h1 className=\"game-dice-title\"> DICE </h1>\n                    <div className=\"game-dice-dice\">\n                      <Dice />\n                    </div>\n                  </div>\n                  <div className=\"column game-coin\">\n                    <h1 className=\"game-coin-title\"> COIN </h1>\n                    <div className=\"game-coin-coin\">\n                      <Coin />\n                    </div>\n                  </div>\n                  <div className=\"column game-time\">\n                    <h1 className=\"game-time-title\"> TIME </h1>\n                    <Timer\n                      formatValue={value =>\n                        `${value < 10 ? `0${value}` : value}`\n                      }\n                      onReset={this.resetGame}\n                    >\n                      {({ reset }) => (\n                        <React.Fragment>\n                          <div className=\"game-time-timer\">\n                            <Timer.Minutes />:\n                            <Timer.Seconds />\n                          </div>\n                          <button\n                            className=\"button game-reset-button\"\n                            onClick={reset}\n                          >\n                            <h1 className=\"game-reset-button-title\">Reset</h1>\n                          </button>\n                        </React.Fragment>\n                      )}\n                    </Timer>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </section>\n\n        <footer className=\"footer\">\n          <h2 className=\"footer-text\">\n            DuelPoints - Todos los derechos reservados\n          </h2>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default Duelpoints;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.scss';\n//import App from './App';\nimport Duelpoints from \"./pages/duelpoints/Duelpoints\"\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Duelpoints />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}